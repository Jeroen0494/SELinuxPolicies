policy_module(container_process2, 1.1)

########################################
#
# Declarations
#

attribute_role container_process2_roles;
roleattribute system_r container_process2_roles;

gen_require(`
	type container_t;
')

allow container_process2_t container_t:dir { getattr ioctl read search };
allow container_process2_t container_t:file { getattr ioctl read };

type container_process2_t;
type container_process2_exec_t;
type container_process2_data_t;
type container_process2_etc_t;
type container_process2_var_run_t;
role container_process2_roles types container_process2_t;

#
files_type(container_process2_t)
files_type(container_process2_data_t)
files_type(container_process2_etc_t)

files_pid_file(container_process2_var_run_t)

files_search_pids(container_t)
files_search_pids(container_process2_t)
files_pid_filetrans(container_process2_t, container_process2_var_run_t, file)

allow container_process2_t container_process2_var_run_t:file manage_file_perms;

########################################
#
# container local policy
#

gen_require(`
	role unconfined_r;
	type unconfined_t;
')

role unconfined_r types container_process2_t;

# Allow domain transition
application_domain(container_process2_t, container_process2_exec_t)
domain_auto_trans(unconfined_t, container_process2_exec_t, container_process2_t)


# Allow processes to manages their own files
allow container_process2_t self:fifo_file manage_fifo_file_perms;
allow container_process2_t container_process2_data_t:fifo_file manage_fifo_file_perms;
allow container_process2_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(container_process2_t, container_process2_data_t, container_process2_data_t)
manage_files_pattern(container_process2_t, container_process2_data_t, container_process2_data_t)
manage_lnk_files_pattern(container_process2_t, container_process2_data_t, container_process2_data_t)

allow container_process2_t container_process2_data_t:dir { create getattr ioctl read write };
allow container_process2_t container_process2_data_t:file { create getattr ioctl read write };

#
domain_use_interactive_fds(container_process2_t)

miscfiles_read_localization(container_process2_t)

gen_tunable(cp2_read_etc_files,false)

tunable_policy(`cp2_read_etc_files',`
	files_read_etc_files(container_process2_t)
	allow container_process2_t container_process2_etc_t:dir { getattr ioctl read search };
	allow container_process2_t container_process2_etc_t:file { getattr ioctl read open };
')

# Allow cron daemon to execute this program
optional_policy(`
	cron_system_entry(container_process2_t, container_process2_exec_t)
')

#
dev_read_urand(container_process2_t)

kernel_read_kernel_sysctls(container_process2_t)
kernel_read_system_state(container_process2_t)

domain_use_interactive_fds(container_process2_t)

seutil_read_config(container_process2_t)

userdom_use_inherited_user_ptys(container_process2_t)

